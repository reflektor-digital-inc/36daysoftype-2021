@import "functions";

@mixin gpu {
  backface-visibility: hidden;
  transform-style: preserve-3d;
  perspective: 1000px;

  .safari & {
    perspective: none; // otherwise text and icons become blurry
  }
}

/* Generic font mixins to apply to any or all fonts */

/*
 * @mixin font-props
 * This mixin requires three arguments: size, letter-spacing, and line-height. Each argument is a unitless number.
 */
@mixin font-props($size, $letter-spacing: 0, $line-height: 1) {
  font-size: #{$size}px;
  letter-spacing: #{decimal-round(math.div($letter-spacing, $size), 2)}em;
  //margin-right: -#{decimal-round($letter-spacing / $size, 2)}em;
  line-height: #{$line-height}em;
}
@mixin font-normal($size, $letter-spacing, $line-height) {
  @include font-props($size, $letter-spacing, $line-height);
  font-style: normal;
  font-weight: 400;
}
@mixin font-light($size, $letter-spacing, $line-height) {
  @include font-props($size, $letter-spacing, $line-height);
  font-weight: 300;
  font-style: normal;
}
@mixin font-bold($size, $letter-spacing, $line-height) {
  @include font-props($size, $letter-spacing, $line-height);
  font-weight: 700;
  font-style: normal;
}

@mixin fk-grotesk-neue-light($size, $letter-spacing: 0, $line-height: 1) {
  @include font-light($size, $letter-spacing, $line-height);
  font-family: $font-fk-grotesk-neue;
}
@mixin fk-grotesk-neue-regular($size, $letter-spacing: 0, $line-height: 1) {
  @include font-normal($size, $letter-spacing, $line-height);
  font-family: $font-fk-grotesk-neue;
}
@mixin fk-grotesk-neue-bold($size, $letter-spacing: 0, $line-height: 1) {
  @include font-bold($size, $letter-spacing, $line-height);
  font-family: $font-fk-grotesk-neue;
}
@mixin gosha($size, $letter-spacing: 0, $line-height: 1) {
  @include font-normal($size, $letter-spacing, $line-height);
  font-family: $font-gosha-sans;
}
@mixin fk-display-regular($size, $letter-spacing: 0, $line-height: 1) {
  @include font-normal($size, $letter-spacing, $line-height);
  font-family: $font-fk-display-regular;
}
@mixin fk-display-regular-alt($size, $letter-spacing: 0, $line-height: 1) {
  @include font-normal($size, $letter-spacing, $line-height);
  font-family: $font-fk-display-regular-alt;
}
@mixin coign-pro-semibold($size, $letter-spacing: 0, $line-height: 1) {
  @include font-normal($size, $letter-spacing, $line-height);
  font-family: $font-coign-pro-36-semibold;
}

/* FONT_FAMILY_MIXINS */
/* EXAMPLES
 * @mixin sharp-book($size, $letter-spacing, $line-height: 1) {
 *   @include font-normal($size, $letter-spacing, $line-height);
 *   font-family: $font-sharp-grotesk-book-19;
 * }
 * @mixin sharp-book-medium($size, $letter-spacing, $line-height: 1) {
 *   @include font-normal($size, $letter-spacing, $line-height);
 *   font-family: $font-sharp-grotesk-medium-19;
 * }
 * @mixin sharp-book-semibold($size, $letter-spacing, $line-height: 1) {
 *   @include font-normal($size, $letter-spacing, $line-height);
 *   font-family: $font-sharp-grotesk-semibold-19;
 * }
 * @mixin tiempos-semibold($size, $letter-spacing, $line-height: 1) {
 *   @include font-normal($size, $letter-spacing, $line-height);
 *   font-family: $font-tiempos-semibold;
 * }
 */

@mixin full-size($position : absolute) {
  position: $position;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
}
@mixin no-select {
  -webkit-touch-callout: none; /* iOS Safari */
  user-select: none; /* Non-prefixed version */
  outline: none;
  user-drag: none;
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
  &:focus {
    -webkit-touch-callout: none; /* iOS Safari */
    outline: none;
    user-drag: none;
    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
  }
}
@mixin clear-fix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}
@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
@mixin input-no-border {
  -webkit-appearance: none;
  -webkit-border-radius: 0;
  outline-width: 0;
}
@mixin background($size) {
  background-size: $size;
  background-position: 50% 50%;
  background-repeat: no-repeat;
}
@mixin width($viewport) {
  margin: 0 auto;

  @if $viewport == 'desktop' {
    width: calc(100vw - 288px);
  } @else if $viewport == 'tablet' {
    width: calc(100vw - 90px);
  } @else if $viewport == 'mobile' {
    width: calc(100vw - 40px);
  }
}
@mixin webkit-smooth-scroll {
  -webkit-overflow-scrolling: touch;
}

/**
 * This mixin can be used to set the object-fit polyfill:
 * @include object-fit(contain);
 * or object-fit and object-position:
 * @include object-fit(cover, top);
 */
@mixin object-fit($fit: fill, $position: null) {
  -o-object-fit: $fit;
  object-fit: $fit;

  @if $position {
    -o-object-position: $position;
    object-position: $position;
    font-family: 'object-fit: #{$fit}; object-position: #{$position}';
  } @else {
    font-family: 'object-fit: #{$fit}';
  }
}

/**
 * This mixin will clear user agent styles for button elements
 */
@mixin button-no-styles {
  display: inline-block;
  border: none;
  padding: 0;
  margin: 0;
  text-decoration: none;
  background: none;
  color: inherit;
  font-family: sans-serif;
  font-size: 0;
  cursor: pointer;
  text-align: center;
  transition: background 250ms ease-in-out, transform 150ms ease;
  -webkit-appearance: none;
  -moz-appearance: none;

  &:hover,
  &:focus {
    background: none;
  }
  &:focus {
    outline: none;
  }
  &:active {
    transform: scale(0.99);
  }
}

/* Hide up/down arrows */
@mixin input-number-no-spinner {
  input[type=number]::-webkit-inner-spin-button,
  input[type=number]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
    -moz-appearance: textfield;
  }
  input[type=number] {
    -moz-appearance: textfield;
  }
}

/* $value argument must be 1 or 0 */
@mixin auto-alpha($alpha, $duration: 0.5s) {
  opacity: $alpha;

  @if $alpha == 0 {
    visibility: hidden;
    transition: opacity $duration $easeInSine, visibility $duration $easeInSine;
  } @else {
    visibility: visible;
    transition: opacity $duration $easeOutSine, visibility $duration $easeOutSine;
  }
}

@mixin animated-underline($ease: $easeOutSine) {
  color: inherit;
  text-decoration: none;
  position: relative;
  background-image: linear-gradient(currentColor, currentColor);
  background-position: 100% 100%;
  background-repeat: no-repeat;
  background-size: 100% 1px;
  &:hover {
    animation: wrappedUnderline 0.5s $ease forwards;
    // background-size: 0 2px, 0 2px, 100% 2px;
  }
}

/*
 This mixin is used to create a container of a specific aspect ratio
 $container-width: value should be percent ex. 100%, 90%
 $height: value should be a number i.e. 1.3, 1.4. (height ratio relative to width)
 The mixin will handle converting it into a percentage
*/
@mixin container-aspect-ratio($container-width, $height) {
  // Container for image
  position: relative;
  width: $container-width;
  display: block;
  overflow: hidden;
  &::before {
    content: '';
    float: left;
    padding-top: $height * 100%;
  }
}

@mixin border($color: #F00) {
  position: relative;
  &::after {
    @include full-size;
    content: "";
    z-index: 1000;
    pointer-events: none;
    border: 1px solid $color;
  }
}
